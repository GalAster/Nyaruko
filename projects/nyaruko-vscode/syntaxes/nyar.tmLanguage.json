{
    "scopeName": "source.nyar",
    "version": "v0.0.1",
    "uuid": "",
    "information_for_contributors": [
        "aster: galaster@foxmail.com"
    ],
    "patterns": [
        {
            "name": "comment.block.nyar",
            "begin": "(^|\\G)(\\s*)(%{3,})\\s*(?=([^%]*)?$)",
            "end": "(^|\\G)(\\2|\\s{0,3})(\\3)\\s*$",
            "beginCaptures": {
                "3": {
                    "name": "punctuation.definition.comment"
                },
                "4": {
                    "name": "punctuation.definition.comment"
                }
            },
            "endCaptures": {
                "3": {
                    "name": "punctuation.definition.comment"
                }
            },
            "patterns": [
                {
                    "include": "text.html.markdown"
                }
            ]
        },
        {
            "name": "comment.document.nyar",
            "begin": "(^|\\G)(\\s*)(%{3,})\\s*(?i:(doc)(\\s+[^%]*)?$)",
            "end": "(^|\\G)(\\2|\\s{0,3})(\\3)\\s*$",
            "beginCaptures": {
                "3": {
                    "name": "punctuation.definition.comment"
                },
                "4": {
                    "name": "punctuation.block.language"
                },
                "5": {
                    "name": "comment.document.attributes.nyar"
                },
                "6": {
                    "name": "comment.document.attributes.nyar"
                }
            },
            "endCaptures": {
                "3": {
                    "name": "punctuation.definition.comment"
                }
            },
            "patterns": [
                {
                    "begin": "(^|\\G)(\\s*)(.*)",
                    "while": "(^|\\G)(?!\\s*([%]{3,})\\s*$)",
                    "contentName": "meta.embedded.document.markdown",
                    "patterns": [
                        {
                            "include": "text.html.markdown"
                        }
                    ]
                }
            ]
        },
        {
            "name": "comment.line.nyar",
            "begin": "#!",
            "end": "^",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.comment.nyar"
                }
            },
            "patterns": [
                {
                    "include": "text.html.markdown"
                }
            ]
        },
        {
            "name": "comment.line.shebang.ts",
            "match": "\\A(#!).*(?=$)",
            "captures": {
                "1": {
                    "name": "punctuation.definition.comment.nyar"
                }
            }
        },
        {
            "name": "constant.language.nyar",
            "match": "\\b(true|false|null)\\b"
        },
        {
            "name": "constant.numeric.float.nyar",
            "match": "(?x)\n  (?<! \\w)(?:\n    (?:\n      \\.[0-9](?: _?[0-9] )*\n      |\n      [0-9](?: _?[0-9] )* \\. [0-9](?: _?[0-9] )*\n      |\n      [0-9](?: _?[0-9] )* \\.\n    ) (?: [eE][+-]?[0-9](?: _?[0-9] )* )?\n    |\n    [0-9](?: _?[0-9] )* (?: [eE][+-]?[0-9](?: _?[0-9] )* )\n  )([jJ])?\\b\n",
            "captures": {
                "1": {
                    "name": "storage.type.imaginary.number.nyar"
                }
            }
        },
        {
            "name": "constant.numeric.integer.nyar",
            "match": "(?x)\n  (?<![\\w\\.])(?:\n      [1-9](?: _?[0-9] )*\n      |\n      0+\n      |\n      [0-9](?: _?[0-9] )* ([jJ])\n      |\n      0 ([0-9]+)(?![eE\\.])\n  )\\b\n",
            "captures": {
                "1": {
                    "name": "storage.type.imaginary.number.nyar"
                },
                "2": {
                    "name": "invalid.illegal.dec.nyar"
                },
                "3": {
                    "name": "invalid.illegal.dec.nyar"
                }
            }
        },
        {
            "name": "keyword.control.module.nyar",
            "match": "\\b(using|as|expose)\\b"
        },
        {
            "name": "keyword.control.nyar",
            "match": "\\b(if|else|switch|case|for|in|while|with)\\b"
        },
        {
            "name": "keyword.operator.arithmetic.nyar",
            "match": "(?x)(\\+|-|\\*|/|\\^|@)"
        },
        {
            "name": "keyword.operator.assignment.lazy.nyar",
            "match": "(?x)(:=)"
        },
        {
            "name": "keyword.operator.assignment.nyar",
            "match": "(?x)(=|\\.=)"
        },
        {
            "name": "keyword.operator.assignment.type.nyar",
            "match": "(?x)(::)"
        },
        {
            "name": "keyword.operator.comparison.nyar",
            "match": "(?x)(<|<=|>|>=)"
        },
        {
            "name": "storage.modifier.nyar",
            "match": "\\b(class|extend|implicate|new|instance|template|macro)\\b"
        },
        {
            "begin": "\\$?\"",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.nyar"
                }
            },
            "end": "\"",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.nyar"
                }
            },
            "name": "string.quoted.double.nyar",
            "patterns": [
                {
                    "match": "\\\\[\\$`\"\\\\\\n]",
                    "name": "constant.character.escape.nyar"
                },
                {
                    "include": "#variable"
                },
                {
                    "include": "#interpolation"
                }
            ]
        },
        {
            "begin": "\\$'",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.nyar"
                }
            },
            "end": "'",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.nyar"
                }
            },
            "name": "string.quoted.single.dollar.nyar",
            "patterns": [
                {
                    "match": "\\\\(a|b|e|f|n|r|t|v|\\\\|')",
                    "name": "constant.character.escape.ansi-c.nyar"
                },
                {
                    "match": "\\\\[0-9]{3}",
                    "name": "constant.character.escape.octal.nyar"
                },
                {
                    "match": "\\\\x[0-9a-fA-F]{2}",
                    "name": "constant.character.escape.hex.nyar"
                },
                {
                    "match": "\\\\c.",
                    "name": "constant.character.escape.control-char.nyar"
                }
            ]
        },
        {
            "begin": "'",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.nyar"
                }
            },
            "end": "'",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.nyar"
                }
            },
            "name": "string.quoted.single.nyar"
        },
        {
            "name": "variable.other.readwrite.nyar",
            "match": "[a-zA-Z*]"
        }
    ]
}